name: Build # and Release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cargo-bins/cargo-binstall@main
      - name: Build
        run: |
          cargo binstall cross
          mkdir -p output

          targets=(
            "aarch64-linux-android"
            "x86_64-unknown-linux-gnu"
            "aarch64-unknown-linux-gnu"
          )
          for target in "${targets[@]}"; do
            cross build --release --target "$target"
            mv "target/$target/release/hotspot-drop" "output/hotspot-drop-$target"
          done
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: output/*
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          cargo build --release
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: target/release/hotspot-drop.exe
  release:
    needs:
      - build-linux
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
      - name: Produce output
        run: |
          ls -R
          mkdir output
          mv windows/hotspot-drop.exe output/hotspot-drop-x86_64-pc-windows-msvc.exe
          mv linux/* output/
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: new release yay
          files: output/*
